name: Continuous Persistent VPS

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-latest
    timeout-minutes: 360 # Just under 6 hours

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set hostname to girdpixel
        run: sudo hostnamectl set-hostname girdpixel

      - name: Try restore from latest backup
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: vps-backup-latest
          path: ./backup

      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y tmate curl unzip sudo net-tools neofetch gh zstd pv pigz

      - name: Install Tailscale official script
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Restore backup files into system
        run: |
          if [ -f ./backup/backup.tar.zst ]; then
            sudo tar --use-compress-program=unzstd -xvf ./backup/backup.tar.zst -C /
          else
            echo "No backup found, starting fresh"
          fi

      - name: Start Tailscale
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=girdpixel || echo "Tailscale already up"

      - name: Create user girdpixel with sudo
        run: |
          if ! id -u girdpixel >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash girdpixel
            echo "girdpixel:girdpixel" | sudo chpasswd
            sudo usermod -aG sudo girdpixel
            echo "girdpixel ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/girdpixel
          fi

      - name: Show Tailscale IP and tmate info
        run: |
          echo "🔗 Tailscale IP:"
          tailscale ip -4 || echo "Tailscale IP not found"
          echo ""
          echo "🔑 tmate SSH session (if running):"
          command -v tmate >/dev/null && tmate display -p '#{tmate_ssh}' || echo "No tmate session"
          echo "🌐 Web terminal:"
          command -v tmate >/dev/null && tmate display -p '#{tmate_web}' || echo "No web terminal"

      - name: Sleep to keep VPS alive
        run: sleep 60  # ~5h40m (safe under 360 min timeout)

      - name: Backup VPS data
        run: |
          echo "✅ Backing up VPS data..."
          BACKUP_DIR="/opt/vps-backup"
          sudo mkdir -p "$BACKUP_DIR/data"

          echo "📂 Copying Tailscale state..."
          if [ -f /var/lib/tailscale/tailscaled.state ]; then
            sudo cp /var/lib/tailscale/tailscaled.state "$BACKUP_DIR/data/"
          fi

          echo "📂 Preparing directories to backup: /etc /var /home/HTNodes /opt"
          TOTAL_SIZE=$(du -sb /etc /var /home/HTNodes /opt \
            --exclude=/var/log \
            --exclude=/var/cache \
            --exclude=/var/lib/apt/lists \
            --exclude=/var/lib/docker 2>/dev/null | awk '{sum+=$1} END {print sum}')
          echo "📦 Total size after exclusions: $TOTAL_SIZE bytes"

          echo "🔄 Creating compressed backup (.tar.zst) with progress bar..."
          sudo tar --exclude='/var/log' \
                   --exclude='/var/cache' \
                   --exclude='/var/lib/apt/lists' \
                   --exclude='/var/lib/docker' \
                   -cf - /etc /var /home/HTNodes /opt | pv -s $TOTAL_SIZE | zstd -19 -T0 -o backup.tar.zst

          echo "✅ Backup complete!"

      - name: Upload VPS backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup-latest
          path: backup.tar.zst
          overwrite: true   # ensures old backup is replaced

      - name: Delete old backup artifacts (auto-clean)
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            vps-backup
